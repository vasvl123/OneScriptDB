
Функция Проверить(Знач б, Знач нач, ок, грам, Да, Нет)

	Для каждого нф Из б Цикл

		Если ТипЗнч(нф.Значение) = Тип("Соответствие") Тогда
			Проверить(нф.Значение, нф.Ключ + нач, ок, грам, Да, Нет);
		Иначе
			Если нф.Значение = грам И нф.Ключ = нач + ок + Символы.Таб + грам Тогда
				Да = Да + 1;
			Иначе
				Нет = Нет + 1;
			КонецЕсли;
		КонецЕсли;

	КонецЦикла;

КонецФункции // ()

Словарь = Новый ТекстовыйДокумент;
Словарь.Прочитать("dict.opcorpora.txt");
Сообщить("Прочитал словарь");

Номер = Неопределено;
нФорма = Неопределено;

НачальныеФормы = Новый Соответствие;

Для н = 1 по Словарь.КоличествоСтрок() Цикл

	стр = Словарь.ПолучитьСтроку(н);

	Если стр = "" Тогда
		Номер = Неопределено;
		нФорма = Неопределено;
	ИначеЕсли Номер = Неопределено Тогда
		Номер = стр;
	Иначе
		Если нФорма = Неопределено Тогда
			нФорма = стр;
			мс = стрРазделить(стр, Символы.Таб);
			к = 0;
			Пока НЕ НачальныеФормы.Получить(мс[0] + "_" + к) = Неопределено Цикл
				к = к + 1;
			КонецЦикла;
			НачальныеФормы.Вставить(мс[0] + "_" + к, н);
		КонецЕсли;
	КонецЕсли;

КонецЦикла;

Сообщить("Заполнил НачальныеФормы");

// создать индекс

МассивСлов = Новый Массив;

Индекс = Новый Соответствие;

Корпус = Новый ТекстовыйДокумент;

Для НомерФайла = 2 по 33 Цикл

	Корпус.Прочитать("ocorp/" + НомерФайла + ".xml");
	МассивТокенов = стрРазделить(Корпус.ПолучитьТекст(), "<");

	Для каждого Токен Из МассивТокенов Цикл
		Если Лев(Токен, 1) = "l" Тогда
			мТокен = СтрРазделить(Токен, """");
			ИсходнаяФорма = мТокен.Получить(мТокен.Количество() - 2);
			кк = 0;
			Пока Истина Цикл
				н = НачальныеФормы.Получить(ВРег(ИсходнаяФорма) + "_" + кк);
				Если н = Неопределено Тогда
					Прервать;
				КонецЕсли;
				нФорма = Неопределено;
				Пока Истина Цикл
					стр = Словарь.ПолучитьСтроку(н);
					Если стр = "" Тогда
						Прервать;
					Иначе
						мс = стрРазделить(стр, Символы.Таб);
						Если нФорма = Неопределено Тогда
							нФорма = стр;
							Лемма = мс[1];
						КонецЕсли;
						сФорма = мс[0];
						к = стрДлина(сФорма);
						ф = Индекс;
						Пока к > 0 Цикл
							бс = Сред(сФорма, к, 1);
							б = ф.Получить(бс);
							Если б = Неопределено Тогда
								б = Новый Соответствие;
								ф.Вставить(бс, б);
							КонецЕсли;
							ф = б;
							к = к - 1;
						КонецЦикла;
						ф.Вставить(нФорма, Лемма);
						МассивСлов.Добавить(сФорма);
					КонецЕсли;
					н = н + 1;
				КонецЦикла;
				НачальныеФормы.Удалить(ВРег(ИсходнаяФорма) + "_" + кк);
				кк = кк + 1;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;

	Сообщить("Добавил слова из " + НомерФайла);

КонецЦикла;

ОсвободитьОбъект(НачальныеФормы);

// создать правила

дПравила = Новый Соответствие;
всеПравила = Новый Соответствие;

Для каждого сФорма Из МассивСлов Цикл

	ф = Индекс;

	к = стрДлина(сФорма);
	Пока к > 0 Цикл
		бс = Сред(сФорма, к, 1);
		б = ф.Получить(бс);
		Если б = Неопределено Тогда
			Прервать;
		КонецЕсли;
		ф = б;
		к = к - 1;
	КонецЦикла;

	Если НЕ б = Неопределено Тогда
		Для каждого нф Из б Цикл
			Если ТипЗнч(нф.Значение) = Тип("Соответствие") Тогда
				Продолжить;
			КонецЕсли;
			мс = СтрРазделить(нф.Ключ, Символы.Таб);
			нФорма = мс[0];
			к = 0;
			Пока Истина Цикл
				к = к + 1;
				Если к > стрДлина(нФорма) ИЛИ к > стрДлина(сФорма) Тогда
					Прервать;
				КонецЕсли;
				Если НЕ Сред(нФорма, к, 1) = Сред(сФорма, к, 1) Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
			пДа = Неопределено;
			пНет = Неопределено;
			пПравило = Неопределено;
			Пока к > 0 Цикл
				Ок = Сред(сФорма, к);
				нОк = Сред(нФорма, к);
				Если НЕ Ок = нОк Тогда
					сПравило = сФорма + " - " + Ок + " / " + нОк + " " + нф.Ключ;
					Если всеПравила.Получить(сПравило) = Неопределено Тогда
						всеПравила.Вставить(сПравило, "");
					Иначе
						к = к - 1;
						Продолжить;
					КонецЕсли;
					Да = 0;
					Нет = 0;
					кк = стрДлина(Ок);
					ф = Индекс;
					Пока кк > 0 Цикл
						бс = Сред(Ок, кк, 1);
						ф = ф.Получить(бс);
						кк = кк - 1;
					КонецЦикла;
					Проверить(ф, "", нОк, нф.Значение, Да, Нет);
					Если Да = 1 Тогда // нет похожих
						Прервать;
					КонецЕсли;
					Если НЕ пПравило = Неопределено Тогда
						Если НЕ (Да / (Нет + 1) > пДа / (пНет + 1) И Да / пДа > 0.75) Тогда // предыдущее было лучше
							Прервать;
						КонецЕсли;
					КонецЕсли;
					пПравило = сПравило;
					пДа = Да;
					пНет = Нет;
				КонецЕсли;
				к = к - 1;
			КонецЦикла;
			Если НЕ пПравило = Неопределено Тогда
				Если пДа / (пНет + 1) > 0.25 Тогда
					дПравила.Вставить(пПравило, "" + пДа + " / " + пНет);
					Сообщить(пПравило);
					Сообщить("" + пДа + " / " + пНет);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

КонецЦикла;
