Перем ф;
Перем ПослЗапись;

Функция ВыполнитьHTTPЗапрос(ПолныйАдресРесурса)

	 Сообщить(РаскодироватьСтроку(ПолныйАдресРесурса, СпособКодированияСтроки.КодировкаURL));

	СтруктураURI = СтруктураURI(ПолныйАдресРесурса);
	HTTPСоединение = Новый HTTPСоединение(СтруктураURI.Хост, СтруктураURI.Порт, , , , 2000);

	HTTPЗапрос = Новый HTTPЗапрос(СтруктураURI.ПутьНаСервере);
	Попытка
		Результат =  HTTPСоединение.Получить(HTTPЗапрос);
	Исключение
		 // исключение здесь говорит о том, что запрос не дошел до HTTP-Сервера
		 Сообщить("Произошла сетевая ошибка!");
		 //ВызватьИсключение;
		 Возврат Неопределено;
	 КонецПопытки;

	 // Анализируем фатальные ошибки
	 // В большинстве случаев нужно остановить работу и показать пользователю сообщение об ошибке,
	 // включив в него HTTP-статус

	 // Ошибки 4XX говорят о неправильном запросе - в широком смысле
	 // Может быть неправильный адрес, ошибка аутентификации, плохой формат запроса
	 // Подробнее смотри http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4
	 Если Результат.КодСостояния >= 400 и Результат.КодСостояния < 500  Тогда
	   	 Сообщить("Код статуса больше 4XX, ошибка запроса.  Код статуса: " + Результат.КодСостояния);
	 КонецЕсли;

	 // Ошибки 5XX говорят о проблемах на сервере (возможно, прокси-сервер)
	 // Это может быть программная ошибка, нехватка памяти, ошибка конфигурации и т.д.
	 // Подробнее смотри http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5
	 Если Результат.КодСостояния >= 500 и Результат.КодСостояния < 600  Тогда
	   	 Сообщить("Код статуса больше 5XX, ошибка сервера. Код статуса: " + Результат.КодСостояния);
	 КонецЕсли;

	 // Обрабатываем перенаправление
	 Если Результат.КодСостояния >= 300 и Результат.КодСостояния < 400  Тогда
	   	 Сообщить("Код статуса больше 3XX, Перенаправление. Код статуса: " + Результат.КодСостояния);
		 Если Результат.КодСостояния = 302 Тогда
			  Сообщить("Код статуса 302, Постоянное перенаправление.");
			  АдресРесурса = Результат.Заголовки.Получить("Location");
			  Если АдресРесурса <> Неопределено Тогда
				  Сообщить("Выполняю запрос по новому адресу " + АдресРесурса);
				  ВыполнитьHTTPЗапрос(АдресРесурса);
			  Иначе
				  Сообщить("Сервер не сообщил адрес ресурса!");
			  КонецЕсли;
		 КонецЕсли;
	 КонецЕсли;
	 // Статусы 1XX и 2XX считаем хорошими
	 Если Результат.КодСостояния < 300 Тогда
		   //Сообщить("Скорее всего все хорошо");
		   Сообщить("Код статуса: " + Результат.КодСостояния);
		   Возврат Результат.ПолучитьТелоКакСтроку();
     КонецЕсли;

	Возврат Неопределено;

КонецФункции


 Функция СтруктураURI(Знач СтрокаURI) Экспорт

	СтрокаURI = СокрЛП(СтрокаURI);

	// схема
	Схема = "";
	Позиция = Найти(СтрокаURI, "://");
	Если Позиция > 0 Тогда
		Схема = НРег(Лев(СтрокаURI, Позиция - 1));
		СтрокаURI = Сред(СтрокаURI, Позиция + 3);
	КонецЕсли;

	// строка соединения и путь на сервере
	СтрокаСоединения = СтрокаURI;
	ПутьНаСервере = "";
	Позиция = Найти(СтрокаСоединения, "/");
	Если Позиция > 0 Тогда
		ПутьНаСервере = Сред(СтрокаСоединения, Позиция + 1);
		СтрокаСоединения = Лев(СтрокаСоединения, Позиция - 1);
	КонецЕсли;

	// информация пользователя и имя сервера
	СтрокаАвторизации = "";
	ИмяСервера = СтрокаСоединения;
	Позиция = Найти(СтрокаСоединения, "@");
	Если Позиция > 0 Тогда
		СтрокаАвторизации = Лев(СтрокаСоединения, Позиция - 1);
		ИмяСервера = Сред(СтрокаСоединения, Позиция + 1);
	КонецЕсли;

	// логин и пароль
	Логин = СтрокаАвторизации;
	Пароль = "";
	Позиция = Найти(СтрокаАвторизации, ":");
	Если Позиция > 0 Тогда
		Логин = Лев(СтрокаАвторизации, Позиция - 1);
		Пароль = Сред(СтрокаАвторизации, Позиция + 1);
	КонецЕсли;

	// хост и порт
	Хост = ИмяСервера;
	Порт = "";
	Позиция = Найти(ИмяСервера, ":");
	Если Позиция > 0 Тогда
		Хост = Лев(ИмяСервера, Позиция - 1);
		Порт = Сред(ИмяСервера, Позиция + 1);
	КонецЕсли;

	Результат = Новый Структура;
	Результат.Вставить("Схема", Схема);
	Результат.Вставить("Логин", Логин);
	Результат.Вставить("Пароль", Пароль);
	Результат.Вставить("ИмяСервера", ИмяСервера);
	Результат.Вставить("Хост", Хост);
	Результат.Вставить("Порт", ?(Порт <> "", Число(Порт), Неопределено));
	Результат.Вставить("ПутьНаСервере", ПутьНаСервере);

	Возврат Результат;

КонецФункции

Функция Парсить(н);

	Пока Истина Цикл
		Рез = ВыполнитьHTTPЗапрос("https://slovar.cc/enc/bse/" + н + ".html");
		Если НЕ Рез = Неопределено Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;

	заг = "";
	нач = СтрНайти(Рез, "article-title"">");
	Если нач > 0 Тогда
		Рез = Сред(Рез, нач + 15);
		кон = СтрНайти(Рез, "</dt>");
		Если кон > 0 Тогда
			заг = Лев(Рез, кон-1);
			ф.ДобавитьСтроку("#");
			//Сообщить(заг);
		КонецЕсли;
		нач = СтрНайти(Рез, "articleBody");
		Если нач > 0 Тогда
			Рез = Сред(Рез, нач + 18);
			Зн = "";
			кон = СтрНайти(Рез, "</p>");
			Если кон > 0 Тогда
				зн = Лев(Рез, кон-1);

				м = СтрРазделить(заг, " ");
				сокр = "";
				Для каждого эм из м Цикл
					сокр = сокр + ?(сокр = "", Лев(эм, 1), " " + нРег(Лев(эм,1))) + ".";
				КонецЦикла;

				зн = СтрЗаменить(зн, сокр, заг);
				зн = СтрЗаменить(зн, Лев(заг, 1) + ".", заг);


				зн = СтрЗаменить(зн, ". ", ".#");
				зн = СтрЗаменить(зн, "! ", "!#");
				зн = СтрЗаменить(зн, "? ", "?#");
				зн = СтрЗаменить(зн, "&#39;", "'");
				зн = заг + " - " + зн;

				м = СтрРазделить(зн, "#");

				пр = "";
				Для каждого эмм из м Цикл
					эм = сокрлп(эмм);
					Если НЕ пр = "" Тогда
						л = Лев(эм, 1);
						Если л = ВРег(л) и
							НЕ Прав(пр, 3) = " " + Сред(Прав(пр, 3), 2, 1) + "." и
							НЕ Лев(эм, 1) + "." = Лев(эм, 2) и
							НЕ л = "(" и не прав(пр, 3) = " о." и
							не прав(пр, 3) = "[р." и
							не прав(пр, 3) = "(т." и
							не прав(пр, 3) = " р." и
							не прав(пр, 3) = " с." и
							не прав(пр, 3) = " г." и
							не прав(пр, 4) = " ок." и
							не прав(пр, 4) = " см." Тогда
								ф.ДобавитьСтроку(пр);
								//Сообщить(пр);
								пр = "";
						Иначе
							пр = пр + " ";
						КонецЕсли;
					КонецЕсли;
					пр = пр + эм;
				КонецЦикла;

				Если НЕ пр = "" Тогда
					ф.ДобавитьСтроку(пр);
					//Сообщить(пр);
				КонецЕсли;

			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	Если ТекущаяДата() - ПослЗапись > 3 * 60 Тогда
		ЗаписатьДанные();
		ПослЗапись = ТекущаяДата();
	КонецЕсли;

КонецФункции

Функция ЗаписатьДанные()
	ф.Записать(ОбъединитьПути(ТекущийКаталог(), "data/.files/bse.txt"));
	Сообщить("Запись");
КонецФункции // ЗаписатьДанные()

ПослЗапись = ТекущаяДата();
ф = Новый ТекстовыйДокумент;

Для н = 1969550 + 20300 по 1969550 + 20320 Цикл //2064816 Цикл
	Парсить(н);
	//Прервать;
КонецЦикла;

ЗаписатьДанные();
