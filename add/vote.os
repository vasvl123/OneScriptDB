Перем ГСЧ;
Перем Ошибки;

Функция ПравильноеРешение(а,б)
    Возврат "" + а + "*" + б + "=" + (а*б);
КонецФункции

Функция НеПравильноеРешение(а,б)
    Задача = "" + а + "*" + б;
    Решение = Ошибки.Получить(Задача);
    Если Решение = Неопределено Тогда
        Решение = "" + (а*б+1);
        Ошибки.Вставить(Задача, Решение);
    КонецЕсли;
    Возврат Задача + "=" + Решение;
КонецФункции

Ошибки = Новый Соответствие;

ГСЧ = Новый ГенераторСлучайныхЧисел();

КоличествоГолосований = 1000;

//Исходные данные
КоличествоГолосующих = 100;
ОбъемЗнаний = 70;
МинимальныйПроцентПравильныхЗнаний =  30;
МаксимальныйПроцентПравильныхЗнаний = 70;
КоличествоВариантовВыбора = 2;

КоличествоВерноПринятыхРешений = 0;
КоличествоНеВерноПринятыхРешений = 0;
Проголосовало = 0;
//ПорогВыбора = 0;

УчастникиГолосования = Новый Массив();

// обучение голосующих
Для н = 0 по КоличествоГолосующих-1 Цикл
    Голосующий = Новый Структура("Знания", Новый Массив());
    Для к = 0 по ОбъемЗнаний-1 Цикл
        ПроцентПравильныхЗнаний = ГСЧ.СлучайноеЧисло(МинимальныйПроцентПравильныхЗнаний, МаксимальныйПроцентПравильныхЗнаний);
        Если ГСЧ.СлучайноеЧисло(1, 100) <= ПроцентПравильныхЗнаний Тогда
            а = Цел(к/10);
            б = к-а*10;
            реш = ПравильноеРешение(а,б);
            Голосующий.Знания.Добавить(реш);
        Иначе
            а = Цел(к/10);
            б = к-а*10;
            реш = НеПравильноеРешение(а,б);
            Голосующий.Знания.Добавить(реш);
        КонецЕсли;
    КонецЦикла;
    УчастникиГолосования.Добавить(Голосующий);
КонецЦикла;

// моделирование голосований
Для г = 1 по КоличествоГолосований Цикл

	// варианты ответов для голосования
    ВариантыВыбора = Новый Массив;
    ВыбранныеВарианты = Новый Массив;
    Для к = 0 по КоличествоВариантовВыбора-1 Цикл
        а = ГСЧ.СлучайноеЧисло(0, 9);
        б = ГСЧ.СлучайноеЧисло(0, 9);
        ВариантыВыбора.Добавить(НеПравильноеРешение(а,б));
        ВыбранныеВарианты.Добавить(0);
    КонецЦикла;
    ПравильныйВариант = ГСЧ.СлучайноеЧисло(0, КоличествоВариантовВыбора-1);
    ВариантыВыбора[ПравильныйВариант] = ПравильноеРешение(а,б);

	// голосующий принимает решение если знает ответ
	Для каждого Голосующий Из УчастникиГолосования Цикл
        Для н = 0 по КоличествоВариантовВыбора-1 Цикл
            Если Голосующий.Знания.Найти(ВариантыВыбора[н]) = Неопределено Тогда
                Продолжить;
            КонецЕсли;
            ВыбранныеВарианты[н]=ВыбранныеВарианты[н]+1;
            Проголосовало = Проголосовало + 1;
            Прервать;
        КонецЦикла;
    КонецЦикла;


    ВыбранныйВариантКоличество = 0;
    ВыбранныйВариант = 0;

	// подсчет результатов
    Для н = 0 по КоличествоВариантовВыбора-1 Цикл
        Если ВыбранныеВарианты[н] > ВыбранныйВариантКоличество Тогда
            ВыбранныйВариантКоличество = ВыбранныеВарианты[н];
            ВыбранныйВариант = н;
        КонецЕсли;
    КонецЦикла;

	//ПорогВыбора = ПорогВыбора + ВыбранныйВариантКоличество;

    Если ВыбранныйВариантКоличество > 0 Тогда
        Если ВыбранныйВариант = ПравильныйВариант Тогда
            КоличествоВерноПринятыхРешений = КоличествоВерноПринятыхРешений + 1;
        Иначе
            КоличествоНеВерноПринятыхРешений = КоличествоНеВерноПринятыхРешений + 1;
        КонецЕсли;
    КонецЕсли;

КонецЦикла;

//Сообщить("Порог выбора, % " + Цел(100*ПорогВыбора/(КоличествоГолосований*КоличествоГолосующих)));
Сообщить("Вероятность принятия верного решения, % " + Цел(100*КоличествоВерноПринятыхРешений/(КоличествоВерноПринятыхРешений + КоличествоНеВерноПринятыхРешений)));
Сообщить("Проголосовало, % " + Цел(100*Проголосовало/(КоличествоГолосований*КоличествоГолосующих)));
