// MIT License
// Copyright (c) 2019 Vladimir Vasiliev
// https://github.com/vasvl123/OneScriptDB


Функция УзелСвойство(Узел, Свойство) Экспорт
	УзелСвойство = Неопределено;
	Если НЕ Узел = Неопределено Тогда
		Узел.Свойство(Свойство, УзелСвойство);
	КонецЕсли;
	Возврат УзелСвойство;
КонецФункции // УзелСвойство(Узел)

Функция СоздатьСвойства(Данные, УзелСвойства, стрСвойства)
	св = Неопределено;
	Свойства = Новый Структура("ЭтотУзел", УзелСвойства);
	Для каждого эл Из стрСвойства Цикл
		Если св = Неопределено Тогда
			св = Данные.НовыйДочерний(УзелСвойства, Новый Структура("Имя, Значение", эл.Ключ, эл.Значение));
		Иначе
			св = Данные.НовыйСоседний(св, Новый Структура("Имя, Значение", эл.Ключ, эл.Значение));
		КонецЕсли;
		Свойства.Вставить(эл.Ключ, св);
	КонецЦикла;
	Данные.УзелСостояниеЗначение(УзелСвойства, "Свойства", Свойства); // оптимизация
	Возврат Свойства;
КонецФункции // СоздатьСвойства(стрСвойства)

Функция НоваяФорма(допСвойства = Неопределено)
	стрСвойства = Новый Структура;
	стрСвойства.Вставить("form", "'box'");
	стрСвойства.Вставить("role", "'thing'");
	стрСвойства.Вставить("movable", "true");
	стрСвойства.Вставить("color", "0x555555");
	стрСвойства.Вставить("transparent", "true");
	стрСвойства.Вставить("opacity", "0.3");
	стрСвойства.Вставить("position_x", "0");
	стрСвойства.Вставить("position_y", "0");
	стрСвойства.Вставить("position_z", "0");
	стрСвойства.Вставить("scale_x", "20");
	стрСвойства.Вставить("scale_y", "10");
	стрСвойства.Вставить("scale_z", "20");
	Если НЕ допСвойства = Неопределено Тогда
		Для каждого элСвойство Из допСвойства Цикл
			стрСвойства.Вставить(элСвойство.Ключ, элСвойство.Значение);
		КонецЦикла;
	КонецЕсли;
	Возврат стрСвойства;
КонецФункции // НоваяФорма()

Функция ПолучитьСвойства(Данные, УзелСвойства)
	Свойства = Данные.УзелСостояние(УзелСвойства, "Свойства");
	Если Свойства = Неопределено Тогда
		Свойства = Новый Структура("ЭтотУзел", УзелСвойства);
		св = Данные.Дочерний(УзелСвойства);
		Пока НЕ св = Неопределено Цикл
			Свойства.Вставить(св.Имя, св);
			св = Данные.Соседний(св);
		КонецЦикла;
		Данные.УзелСостояниеЗначение(УзелСвойства, "Свойства", Свойства); // оптимизация
	КонецЕсли;
	Возврат Свойства;
КонецФункции // ПолучитьСвойства()

Функция ФормаВид(Данные, Свойства)
	Вид = "<script>var p = {id: '" + Свойства.ЭтотУзел.Код + "', fid: '" + Свойства.Форма.Код + "', name: '" + Свойства.ЭтотУзел.Родитель.Значение + "'";
	св = Данные.Дочерний(Свойства.Форма);
	Пока не св = Неопределено Цикл
		Вид = Вид + "," + св.Имя + ":" + св.Значение;
		св = Данные.Соседний(св);
	КонецЦикла;
	Вид = Вид + "};";
	Возврат Вид;
КонецФункции // ФормаВид()


Функция ДобавитьСвойство(Данные, УзелСвойства, Свойства, стрСвойства) Экспорт
	элСвойство = Неопределено;
	Если Свойства.Свойство(стрСвойства.Имя, элСвойство) Тогда
		элСвойство.Значение = стрСвойства.Значение;
	Иначе
		дСвойство = Данные.Дочерний(УзелСвойства);
		Если дСвойство = Неопределено Тогда
			элСвойство = Данные.НовыйДочерний(УзелСвойства, стрСвойства, Истина);
		Иначе
			элСвойство = Данные.НовыйПоследний(дСвойство, стрСвойства, Истина);
		КонецЕсли;
		Свойства.Вставить(элСвойство.Имя, элСвойство);
	КонецЕсли;
	Возврат элСвойство;
КонецФункции // ДобавитьСвойство()


Функция ОбработатьСвойства(Данные, Узел, ТипОбъекта, УзелСвойства, Свойства) Экспорт
	Перем Вид;

	Если ТипОбъекта = "Кнопка" Тогда

	ИначеЕсли ТипОбъекта = "Надпись" Тогда

	ИначеЕсли ТипОбъекта = "Субъект" Тогда
		Вид = ФормаВид(Данные, Свойства) + " var id=""_" + Узел.Код + """; updifrm(id,p);</script>";
		Форма = ПолучитьСвойства(Данные, Свойства.Форма);

	ИначеЕсли ТипОбъекта = "Предмет" Тогда
		Вид = ФормаВид(Данные, Свойства) + " var id=""_" + Узел.Код + """; updifrm(id,p);</script>";
		Форма = ПолучитьСвойства(Данные, Свойства.Форма);

	ИначеЕсли ТипОбъекта = "Комната" Тогда
		Вид = ФормаВид(Данные, Свойства) + " var id=""_" + Узел.Код + """; updifrm(id,p);</script>";
		Форма = ПолучитьСвойства(Данные, Свойства.Форма);

	ИначеЕсли ТипОбъекта = "Группа" Тогда

	Иначе
		Вид = "Тип объекта неизвестен";

	КонецЕсли;

	Если НЕ Вид = Неопределено Тогда
		ДобавитьСвойство(Данные, УзелСвойства, Свойства, Новый Структура("Имя, Значение", "Вид", Вид));
	КонецЕсли;

	Возврат УзелСвойство(Свойства, "Вид");

КонецФункции // Кнопка()


Функция СвойстваОбъекта(ТипОбъекта)

	стрСвойства = Новый Структура;

	Если ТипОбъекта = "Кнопка" Тогда
		стрСвойства.Вставить("Текст", "");
		стрСвойства.Вставить("Тип", "");

	ИначеЕсли ТипОбъекта = "Надпись" Тогда
		стрСвойства.Вставить("Текст", "");
		стрСвойства.Вставить("Тип", "");

	ИначеЕсли ТипОбъекта = "Субъект" Тогда
		стрСвойства.Вставить("Тип", "Субъект");
		стрСвойства.Вставить("Описание", "Субъект");
		допСвойства = Новый Структура("camera_x, camera_y, camera_z, role", "0", "50", "100", "'player'");
		стрСвойства.Вставить("Форма", НоваяФорма(допСвойства));

	ИначеЕсли ТипОбъекта = "Предмет" Тогда
		стрСвойства.Вставить("Тип", "Предмет");
		стрСвойства.Вставить("Описание", "Предмет");
		стрСвойства.Вставить("Форма", НоваяФорма());

	ИначеЕсли ТипОбъекта = "Комната" Тогда
		стрСвойства.Вставить("Тип", "Комната");
		стрСвойства.Вставить("Описание", "Комната");
		допСвойства = Новый Структура("role, movable", "'room'", "false");
		стрСвойства.Вставить("Форма", НоваяФорма(допСвойства));

	КонецЕсли;

	Возврат стрСвойства;

КонецФункции // СвойстваОбъекта()


Функция ОбработатьОбъект(Данные, ЭтотУзел, ТипОбъекта, Атрибуты, структЗадача) Экспорт
	Перем УзелСвойства, Свойства;

	УзелСвойства = Данные.Дочерний(ЭтотУзел);
	Если НЕ УзелСвойства = Неопределено Тогда
		Если НЕ УзелСвойства.Имя = "Свойства" Тогда
			УзелСвойства = Неопределено;
		КонецЕсли;
	КонецЕсли;

	Если УзелСвойства = Неопределено Тогда
		УзелСвойства = Данные.НовыйДочерний(ЭтотУзел, Новый Структура("Имя, Значение", "Свойства", ""));
		стрСвойства = СвойстваОбъекта(ТипОбъекта);
		Свойства = СоздатьСвойства(Данные, УзелСвойства, стрСвойства);
	КонецЕсли;

	Если Свойства = Неопределено Тогда
		Свойства = ПолучитьСвойства(Данные, УзелСвойства);
	КонецЕсли;

	Возврат ОбработатьСвойства(Данные, ЭтотУзел, ТипОбъекта, УзелСвойства, Свойства);

КонецФункции // ОбработатьОбъект()
