// MIT License
// Copyright (c) 2020 vasvl123
// https://github.com/vasvl123/useyourmind


Функция УзелСвойство(Узел, Свойство) Экспорт
	УзелСвойство = Неопределено;
	Если НЕ Узел = Неопределено Тогда
		Узел.Свойство(Свойство, УзелСвойство);
	КонецЕсли;
	Возврат УзелСвойство;
КонецФункции // УзелСвойство(Узел)


Функция ИмяЗначение(Имя, Значение = "")
	Возврат Новый Структура("Имя, Значение", Имя, Значение);
КонецФункции


Процедура ОбработатьОтвет(Действие, Данные, Свойства, Результат) Экспорт

	Если Действие = "Элементы" Тогда

		Свойства.Вставить("Элементы", Результат.Элементы);

	КонецЕсли;

	Данные.ОбъектыОбновитьДобавить(Свойства.Родитель);
	Свойства.Родитель.Вставить("Обновить", Неопределено);

КонецПроцедуры


Функция ОбработатьДействие(Данные, оУзел, Свойства)

	Если НЕ Свойства.Свойство("Элементы") Тогда
		// Получить всю ветку иерархии
		База = "";
		Ветка = Новый Массив;
		Узел = оУзел;
		Пока НЕ Узел = Неопределено Цикл
			Если Узел.Имя = "О" ИЛИ Узел.Имя = "Объект" Тогда
				Если Лев(Узел.Значение, 4) = "Мета" Тогда
					Если Свойства.д.Тип.Значение = "База" Тогда
						База = Свойства.д.Имя.Значение;
					КонецЕсли;
					эл = Новый Структура("Ид, Тип, Имя", Свойства.д.Ид.Значение, Свойства.д.Тип.Значение, Свойства.д.Имя.Значение);
					Ветка.Добавить(эл);
				КонецЕсли;
			КонецЕсли;
			Узел = Узел.Родитель;
		КонецЦикла;
		// получить свойства элемента
		Запрос = Новый Структура("Библиотека, Данные, Параметры, Свойства, cmd", ЭтотОбъект, Данные, Новый Структура("Действие, База, Ветка", "Свойства", База, Ветка), Свойства, "ВнешниеДанные");
		Данные.Процесс.НоваяЗадача(Запрос, "Служебный");

	ИначеЕсли НЕ Свойства.Элементы = Неопределено Тогда // элементы загружены
		д = Свойства;
		Для каждого эл из Свойства.Элементы Цикл
			д = Данные.НовыйСоседний(д, ИмяЗначение("О", "Мета.Класс"), Истина);
			д.Вставить("Элемент", эл);
		КонецЦикла;
		Свойства.Вставить("Элементы", Неопределено);

	КонецЕсли;

КонецФункции


Функция Класс_Свойства(Данные, оУзел) Экспорт

	Свойства = оУзел.Дочерний;
	Если Свойства = Неопределено Тогда // новый объект
		Свойства = Данные.НовыйДочерний(оУзел, ИмяЗначение("Свойства.", ""), Данные.Служебный(оУзел));
		шСвойства = "
		|Ид
		|Тип
		|Имя
		|";
		Данные.СоздатьСвойства(Свойства, шСвойства);
	КонецЕсли;
	шСвойства = "
	|*События
	|*Показать: Нет
	|*Кнопка
	|*Вид
	|	З: Кнопка
	|	: Если
	|		З: Показать
	|		ul
	|			П: Содержимое
	|";
	Данные.СоздатьСвойства(Свойства, шСвойства, "Только");
	оУзел.Вставить("Свойства", Свойства);

	Если оУзел.Свойство("Элемент") Тогда
		Свойства.д.Ид.Значение = оУзел.Элемент.Ид;
		Свойства.д.Тип.Значение = оУзел.Элемент.Тип;
		Свойства.д.Тип.Значение = оУзел.Элемент.Имя;
	КонецЕсли;

КонецФункции

Функция Класс_Модель(Данные, Свойства, Изменения) Экспорт

	оУзел = Свойства.Родитель;

	// обработать события
	Если Изменения.Получить(Свойства.д.События) = Истина Тогда
		дУзел = Свойства.д.События.Дочерний;
		Если НЕ дУзел = Неопределено Тогда
			мСобытие = СтрРазделить(дУзел.Значение, Символы.Таб);
			тСобытие = мСобытие[0];
			Если тСобытие = "ПриНажатии" Тогда
				Если Свойства.д.Показать.Значение = "Да" Тогда
					Свойства.д.Показать.Значение = "Нет";
				Иначе
					Свойства.д.Показать.Значение = "Да";
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Данные.УдалитьУзел(дУзел);
		Изменения.Вставить(Свойства.д.События, Истина);
	КонецЕсли;

	Если Свойства.д.Показать.Значение = "Да" Тогда
		ОбработатьДействие(Данные, оУзел, Свойства);
	КонецЕсли;

	// сформировать представление
	ш = "<button id='_" + оУзел.Код + "' type='button' class='text-left btn1 btn-secondary' onclick='addcmd(this,event); return false' role='sent'>.текст</button>";
	см = ?(Свойства.д.Показать.Значение = "Нет", "&#9655;", "&#9661;");
	Вид = СтрЗаменить(ш, ".текст", см);
	Вид = "<div class='btn-group' role='group'>" + Вид + СтрЗаменить(ш, ".текст", Свойства.д.Тип.Значение + "." + Свойства.д.Имя.Значение) + "</div>";

	Свойства.д.Кнопка.Значение = Вид;

КонецФункции


Функция Элемент_Свойства(Данные, оУзел) Экспорт

	Свойства = оУзел.Дочерний;
	Если Свойства = Неопределено Тогда // новый объект
		Свойства = Данные.НовыйДочерний(оУзел, ИмяЗначение("Свойства.", ""), Данные.Служебный(оУзел));
		шСвойства = "
		|Ид
		|Тип
		|Имя";
		Данные.СоздатьСвойства(Свойства, шСвойства);
	КонецЕсли;
	шСвойства = "
	|*События
	|*Показать: Нет
	|*Кнопка
	|*Вид
	|	З: Кнопка
	|	: Если
	|		З: Показать
	|		ul
	|			П: Содержимое
	|";
	Данные.СоздатьСвойства(Свойства, шСвойства, "Только");
	оУзел.Вставить("Свойства", Свойства);

	Если оУзел.Свойство("Элемент") Тогда
		Свойства.д.Ид.Значение = оУзел.Элемент.Ид;
		Свойства.д.Тип.Значение = оУзел.Элемент.Тип;
		Свойства.д.Тип.Значение = оУзел.Элемент.Имя;
	КонецЕсли;

КонецФункции


Функция Элемент_Модель(Данные, Свойства, Изменения) Экспорт

	оУзел = Свойства.Родитель;

	// обработать события
	Если Изменения.Получить(Свойства.д.События) = Истина Тогда
		дУзел = Свойства.д.События.Дочерний;
		Если НЕ дУзел = Неопределено Тогда
			мСобытие = СтрРазделить(дУзел.Значение, Символы.Таб);
			тСобытие = мСобытие[0];
			Если тСобытие = "ПриНажатии" Тогда
				Если Свойства.д.Показать.Значение = "Да" Тогда
					Свойства.д.Показать.Значение = "Нет";
				Иначе
					Свойства.д.Показать.Значение = "Да";
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Данные.УдалитьУзел(дУзел);
		Изменения.Вставить(Свойства.д.События, Истина);
	КонецЕсли;

	Если Свойства.д.Показать.Значение = "Да" Тогда
		ОбработатьДействие(Данные, оУзел, Свойства);
	КонецЕсли;

	// сформировать представление
	ш = "<button id='_" + оУзел.Код + "' type='button' class='text-left btn1 btn-secondary' onclick='addcmd(this,event); return false' role='sent'>.текст</button>";
	см = ?(Свойства.д.Показать.Значение = "Нет", "&#9655;", "&#9661;");
	Вид = СтрЗаменить(ш, ".текст", см);
	Вид = "<div class='btn-group' role='group'>" + Вид + СтрЗаменить(ш, ".текст", Свойства.д.Имя.Значение) + "</div>";

	Свойства.д.Кнопка.Значение = Вид;

КонецФункции
