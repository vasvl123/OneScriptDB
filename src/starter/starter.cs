using System;
using onesharp;

namespace onesharp
{
    class starter : Onesharp
    {

        public starter() : base("starter") {}

        functions Функции = new functions();

        string Хост;
        Соответствие Контроллеры;
        bool Локальный;
        string mono;
        int showdata;
        Массив Соединения;
        Массив мЗадачи;

        public bool ЗапуститьПроцесс(string Имя, int Порт, string Параметры = "")
        {
            try
            {
                Сообщить("Запуск " + Имя + " ...");
                // Проверка свободного порта
                TCPСервер Сервер = new TCPСервер(Порт);
                Сервер.Запустить();
                Сервер.Остановить();
                ЗапуститьПриложение(mono + Имя + " " + Порт + " " + Параметры, ТекущийКаталог());
                Приостановить(200); // ???
            }
            catch (Exception e)
            {
                Сообщить(ОписаниеОшибки(e));
                return Ложь;
            }
            return Истина;
        } // ЗапуститьПроцесс()

        public void Main()
        {

            Хост = "127.0.0.1";

            int Порт = 8890; // Порт стартера
            int ПортЗ = 8888; // Порт запросов веб-сервера
            int ПортВ = 8889; // Порт ответов веб-сервера
            int ПортД = 8887; // Порт дата-сервера
            int ПортМ = 8886; // Порт морфологии

            var НовыйПортК = ПортМ - 1;

            string ПараметрХост = " "; // путь для загрузки ресурсов

            Контроллеры = Соответствие.Новый();

            Соединения = Массив.Новый();

            Локальный = Истина;

            мЗадачи = Массив.Новый();

            mono = "";
            var си = СистемнаяИнформация.Новый();
            if (Лев(си.ВерсияОС, 4) == "Unix")
            {
                mono = "mono ";
            }

            if (АргументыКоманднойСтроки.Length != 0)
            {
                Локальный = (АргументыКоманднойСтроки[0] != "site");
                if (!Локальный)
                {
                    ПортЗ = (int)Число(АргументыКоманднойСтроки[1]);
                    Сообщить("Режим сайта, порт " + ПортЗ); // перезапуск и завершение заблокированы
                    ПараметрХост = ""; // путь для загрузки ресурсов
                }
            }

            var Таймаут = 5;

            var TCPСервер = new TCPСервер(Порт);
            TCPСервер.ЗапуститьАсинхронно();
            Сообщить("Стартер запущен на порту: " + Порт);

            мЗадачи.Добавить(Структура.Новый("Запущен, ДанныеВходящие", Ложь, Структура.Новый("cmd", "startweb")));
            мЗадачи.Добавить(Структура.Новый("Запущен, ДанныеВходящие", Ложь, Структура.Новый("cmd", "showdata")));
            мЗадачи.Добавить(Структура.Новый("Запущен, ДанныеВходящие", Ложь, Структура.Новый("cmd", "startdata")));
            мЗадачи.Добавить(Структура.Новый("Запущен, ДанныеВходящие", Ложь, Структура.Новый("cmd", "startmorph")));

            bool ЗавершитьПроцесс = Ложь;
            bool ПерезапуститьПроцесс = Ложь;
            int ПустойЦикл = 0;

            while (!ЗавершитьПроцесс)
            {
                var НачалоЦикла = ТекущаяУниверсальнаяДатаВМиллисекундах();

                var к = мЗадачи.Количество();
                while (к > 0 && !(ТекущаяУниверсальнаяДатаВМиллисекундах() - НачалоЦикла > 50))
                {
                    к = к - 1;
                    var структЗадача = мЗадачи.Получить(0) as Структура;
                    мЗадачи.Удалить(0);

                    var ДанныеВходящие = структЗадача.Получить("ДанныеВходящие") as Структура;
                    var cmd = ДанныеВходящие.с.cmd;

                    if (cmd == "startproc")
                    {
                        if (showdata != 0)
                        {
                            if (Контроллеры.Получить(ДанныеВходящие.с.procid) == Неопределено)
                            {
                                var ПортК = showdata;
                                showdata = 0;

                                var стрКонтроллер = Структура.Новый("procid, Хост, Порт, ПортС, ПортВ, ПортД, ПортМ, УдаленныйУзел, Локальный, ПараметрХост, cmd",
                                                                    ДанныеВходящие.с.procid, Хост, ПортК, Порт, ПортВ, ПортД, ПортМ, "", Локальный, ПараметрХост, "init");
                                while (Функции.ПередатьДанные(Строка(Хост), ПортК, стрКонтроллер) == Неопределено)
                                {
                                    Сообщить("Ошибка передачи параметров процессу.");
                                    Приостановить(50);
                                }

                                Контроллеры.Вставить(ДанныеВходящие.с.procid, стрКонтроллер);
                                break;
                            }
                        }
                    }

                    else if (cmd == "termproc")
                    {
                        if (ДанныеВходящие.Свойство("procid"))
                        {
                            // процесс завершен
                            var элКонтроллер = Контроллеры.Получить(ДанныеВходящие.с.procid);
                            if (элКонтроллер != Неопределено)
                            {
                                Контроллеры.Удалить(ДанныеВходящие.с.procid);
                            }
                            continue;
                        }
                    }

                    else if (cmd == "startmorph")
                    {
                        // Запуск сервера морфологии
                        if (структЗадача.с.Запущен == Ложь)
                        {
                            структЗадача.с.Запущен = Истина;
                            ЗапуститьПроцесс("morphserver.exe", ПортМ);
                        }
                        else
                        {
                            continue;
                        }
                    }

                    else if (cmd == "startdata")
                    {
                        // Запуск дата-сервера
                        if (структЗадача.с.Запущен == Ложь)
                        {
                            структЗадача.с.Запущен = Истина;
                            ЗапуститьПроцесс("dataserver.exe", ПортД);
                        }
                        else
                        {
                            continue;
                        }
                    }

                    else if (cmd == "startweb")
                    {
                        // Запуск веб-сервера
                        if (структЗадача.с.Запущен == Ложь)
                        {
                            структЗадача.с.Запущен = Истина;
                            ЗапуститьПроцесс("webserver.exe", ПортВ, Строка(ПортЗ));
                        }
                        else
                        {
                            // Передать параметры веб-сервера
                            if (Функции.ПередатьДанные(Хост, ПортВ, Структура.Новый("Хост, Порт, ПортС, ПортД, cmd", Хост, ПортВ, Порт, ПортД, "init")) != Неопределено)
                            {
                                Приостановить(50);
                                continue;
                            }
                        }
                    }

                    else if (cmd == "showdata")
                    {
                        if (showdata == 0)
                        {
                            // запустить процесс заранее
                            if (НовыйПортК < 5555)
                            {
                                НовыйПортК = ПортМ;
                            }
                            НовыйПортК = НовыйПортК - 1;
                            while (!ЗапуститьПроцесс("showdata.exe", НовыйПортК)) { НовыйПортК = НовыйПортК - 1; }
                            showdata = НовыйПортК;
                        }
                    }

                    else if (cmd == "stopserver" || cmd == "restartserver")
                    {
                        if (Локальный)
                        {
                            // Завершить процессы
                            foreach (КлючИЗначение элКонтроллер in Контроллеры)
                            {
                                var Контроллер = элКонтроллер.Значение as Структура;
                                Функции.ПередатьДанные(Контроллер.с.Хост, Контроллер.с.Порт, Структура.Новый("cmd, taskid", "termproc", "0"));
                            }

                            // процесс запущен заранее
                            if (showdata != 0)
                            {
                                Функции.ПередатьДанные(Хост, showdata, Структура.Новый("cmd, taskid", "termproc", "0"));
                            }

                            if (cmd == "restartserver")
                            {
                                ПерезапуститьПроцесс = Истина;
                            }

                            ЗавершитьПроцесс = Истина;
                        }
                        else
                        {
                            // завершаем один процесс
                            if (ДанныеВходящие.Свойство("procid"))
                            {
                                var элКонтроллер = Контроллеры.Получить(ДанныеВходящие.с.procid) as Структура;
                                if (элКонтроллер != Неопределено)
                                {
                                    Функции.ПередатьДанные(элКонтроллер.с.Хост, элКонтроллер.с.Порт, Структура.Новый("cmd, taskid", "termproc", "0"));
                                }
                            }
                        }
                        continue;
                    }

                    мЗадачи.Добавить(структЗадача);

                }

                var Соединение = TCPСервер.ПолучитьСоединение(Таймаут);
                if (Соединение != Неопределено)
                {
                    Соединения.Вставить(0, Соединение);
                    Таймаут = 5;
                }

                к = Соединения.Количество();
                while (к > 0)
                {
                    к = к - 1;
                    Соединение = (TCPСоединение)Соединения.Получить(0);
                    Соединения.Удалить(0);

                    if (Соединение.Статус == "Данные")
                    {
                        Структура ДанныеВходящие = null;
                        try
                        {
                            ДанныеВходящие = Функции.ДвоичныеДанныеВСтруктуру(Соединение.ПолучитьДвоичныеДанные()) as Структура;
                        }
                        catch (Exception e)
                        {
                            Сообщить("starter: " + ОписаниеОшибки(e));
                        }

                        if (ДанныеВходящие == Неопределено)
                        {
                            continue;
                        }

                        if (ДанныеВходящие.Свойство("cmd"))
                        {
                            // новая задача
                            Сообщить("starter: " + ДанныеВходящие.с.cmd);
                            мЗадачи.Добавить(Структура.Новый("ДанныеВходящие", ДанныеВходящие));
                        }

                        Соединение.Закрыть();
                        continue;
                    }

                    else if (Соединение.Статус == "Ошибка")
                    {
                        Соединение.Закрыть();
                        continue;
                    }

                    else
                    {
                        ПустойЦикл = ПустойЦикл + 1;
                    }

                    Соединения.Добавить(Соединение);
                }

                var ВремяЦикла = ТекущаяУниверсальнаяДатаВМиллисекундах() - НачалоЦикла;
                if (ВремяЦикла > 100)
                {
                    Сообщить("!starter ВремяЦикла=" + ВремяЦикла);
                }
                if (Таймаут < 50)
                {
                    Таймаут = Таймаут + 1;
                }

            }

            if (Контроллеры.Количество() != 0)
            {
                Сообщить("Не все контроллеры завершили работу.");
                Приостановить(200);
            }
            TCPСервер.Остановить();

            // Завершить сервер морфологии
            var с1 = Функции.ПередатьДанные(Хост, ПортМ, Структура.Новый("cmd", "stopserver"));

            // Завершить веб-сервер
            var с2 = Функции.ПередатьДанные(Хост, ПортВ, Структура.Новый("cmd", "stopserver"));

            // Завершить дата-сервер
            var с3 = Функции.ПередатьДанные(Хост, ПортД, Структура.Новый("cmd", "stopserver"));

            while (с1.Статус == "Занят" || с2.Статус == "Занят" || с3.Статус == "Занят")
            {
                Приостановить(50);
            }

            if (ПерезапуститьПроцесс)
            {
                Сообщить("Перезапуск");
                ЗапуститьПроцесс("starter.exe", Порт);
            }

            Сообщить("Процесс starter завершен.");

        }

    }

}
